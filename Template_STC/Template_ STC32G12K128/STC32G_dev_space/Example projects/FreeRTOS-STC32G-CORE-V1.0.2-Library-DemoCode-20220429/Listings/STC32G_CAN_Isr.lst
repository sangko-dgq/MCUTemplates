C251 COMPILER V5.60.0,  STC32G_CAN_Isr                                                     29/04/22  16:40:35  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE STC32G_CAN_Isr
OBJECT MODULE PLACED IN .\Objects\STC32G_CAN_Isr.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE Sources\Driver\isr\STC32G_CAN_Isr.c XSMALL FUNCTIONS(REENTRANT) OPTIMI
                    -ZE(4,SPEED) BROWSE INCDIR(.\Sources\User;.\Sources\User\include;.\Sources\FreeRTOS\include;.\Sources\FreeRTOS\portable\S
                    -TC32G12K128;.\Sources\Driver\inc;.\Sources\Task\inc) DEBUG PRINT(.\Listings\STC32G_CAN_Isr.lst) OBJECT(.\Objects\STC32G_
                    -CAN_Isr.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          #include        "STC32G_CAN.h"
   14          
   15          bit B_Can1Read;     //CAN1 收到数据标志
   16          bit B_Can2Read;     //CAN2 收到数据标志
   17          bit B_Can1Send;     //CAN1 发生数据标志
   18          bit B_Can2Send;     //CAN2 发生数据标志
   19          
   20          //========================================================================
   21          // 函数: CAN1_ISR_Handler
   22          // 描述: CAN1中断函数.
   23          // 参数: none.
   24          // 返回: none.
   25          // 版本: V1.0, 2022-03-27
   26          //========================================================================
   27          void CAN1_ISR_Handler (void) interrupt CAN1_VECTOR
   28          {
   29   1              uint8_t isr;
   30   1              uint8_t store;
   31   1      
   32   1              store = AUXR2;
   33   1              
   34   1              AUXR2 &= ~0x08;         //选择CAN1模块
   35   1              isr = CanReadReg(ISR);
   36   1              CANAR = ISR;
   37   1              CANDR = isr;     //写1清除标志位
   38   1      
   39   1              if((isr & 0x04) == 0x04)  //TI
   40   1              {
   41   2      //              CANAR = ISR;
   42   2      //              CANDR |= 0x04;    //CLR FLAG
   43   2                      
   44   2                      B_Can1Send = 0;
   45   2        }     
   46   1              if((isr & 0x08) == 0x08)  //RI
   47   1              {
   48   2      //              CANAR = ISR;
   49   2      //              CANDR |= 0x08;    //CLR FLAG
   50   2              
   51   2                      B_Can1Read = 1;
   52   2              }
   53   1      
   54   1              if((isr & 0x40) == 0x40)  //ALI
   55   1              {
   56   2      //              CANAR = ISR;
C251 COMPILER V5.60.0,  STC32G_CAN_Isr                                                     29/04/22  16:40:35  PAGE 2   

   57   2      //              CANDR |= 0x40;    //CLR FLAG
   58   2              }       
   59   1      
   60   1              if((isr & 0x20) == 0x20)  //EWI
   61   1              {
   62   2                      CANAR = MR;
   63   2                      CANDR &= ~0x04;  //清除 Reset Mode, 从BUS-OFF状态退出
   64   2                      
   65   2      //              CANAR = ISR;
   66   2      //              CANDR |= 0x20;    //CLR FLAG
   67   2              }       
   68   1      
   69   1              if((isr & 0x10) == 0x10)  //EPI
   70   1              {
   71   2      //              CANAR = ISR;
   72   2      //              CANDR |= 0x10;    //CLR FLAG
   73   2              }       
   74   1      
   75   1              if((isr & 0x02) == 0x02)  //BEI
   76   1              {
   77   2      //              CANAR = ISR;
   78   2      //              CANDR |= 0x02;    //CLR FLAG
   79   2              }       
   80   1      
   81   1              if((isr & 0x01) == 0x01)  //DOI
   82   1              {
   83   2      //              CANAR = ISR;
   84   2      //              CANDR |= 0x01;    //CLR FLAG
   85   2              }       
   86   1      
   87   1              AUXR2 = store;
   88   1      }
   89          
   90          //========================================================================
   91          // 函数: CAN2_ISR_Handler
   92          // 描述: CAN2中断函数.
   93          // 参数: none.
   94          // 返回: none.
   95          // 版本: V1.0, 2022-03-27
   96          //========================================================================
   97          void CAN2_ISR_Handler (void) interrupt CAN2_VECTOR
   98          {
   99   1              uint8_t isr;
  100   1              uint8_t store;
  101   1      
  102   1              store = AUXR2;
  103   1              
  104   1              AUXR2 |= 0x08;          //选择CAN2模块
  105   1              isr = CanReadReg(ISR);
  106   1              CANAR = ISR;
  107   1              CANDR = isr;     //写1清除标志位
  108   1      
  109   1              if((isr & 0x04) == 0x04)  //TI
  110   1              {
  111   2      //              CANAR = ISR;
  112   2      //              CANDR |= 0x04;    //CLR FLAG
  113   2                      
  114   2                      B_Can2Send = 0;
  115   2        }     
  116   1              if((isr & 0x08) == 0x08)  //RI
  117   1              {
  118   2      //              CANAR = ISR;
  119   2      //              CANDR |= 0x08;    //CLR FLAG
  120   2              
  121   2                      B_Can2Read = 1;
  122   2              }
C251 COMPILER V5.60.0,  STC32G_CAN_Isr                                                     29/04/22  16:40:35  PAGE 3   

  123   1      
  124   1              if((isr & 0x40) == 0x40)  //ALI
  125   1              {
  126   2      //              CANAR = ISR;
  127   2      //              CANDR |= 0x40;    //CLR FLAG
  128   2              }       
  129   1      
  130   1              if((isr & 0x20) == 0x20)  //EWI
  131   1              {
  132   2                      CANAR = MR;
  133   2                      CANDR &= ~0x04;  //清除 Reset Mode, 从BUS-OFF状态退出
  134   2                      
  135   2      //              CANAR = ISR;
  136   2      //              CANDR |= 0x20;    //CLR FLAG
  137   2              }       
  138   1      
  139   1              if((isr & 0x10) == 0x10)  //EPI
  140   1              {
  141   2      //              CANAR = ISR;
  142   2      //              CANDR |= 0x10;    //CLR FLAG
  143   2              }       
  144   1      
  145   1              if((isr & 0x02) == 0x02)  //BEI
  146   1              {
  147   2      //              CANAR = ISR;
  148   2      //              CANDR |= 0x02;    //CLR FLAG
  149   2              }       
  150   1      
  151   1              if((isr & 0x01) == 0x01)  //DOI
  152   1              {
  153   2      //              CANAR = ISR;
  154   2      //              CANDR |= 0x01;    //CLR FLAG
  155   2              }       
  156   1      
  157   1              AUXR2 = store;
  158   1      }
  159          
  160          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       250     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =         4     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
