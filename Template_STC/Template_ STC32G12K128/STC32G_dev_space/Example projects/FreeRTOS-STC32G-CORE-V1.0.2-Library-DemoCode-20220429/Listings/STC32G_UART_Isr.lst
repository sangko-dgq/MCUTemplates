C251 COMPILER V5.60.0,  STC32G_UART_Isr                                                    29/04/22  16:40:39  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE STC32G_UART_Isr
OBJECT MODULE PLACED IN .\Objects\STC32G_UART_Isr.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE Sources\Driver\isr\STC32G_UART_Isr.c XSMALL FUNCTIONS(REENTRANT) OPTIM
                    -IZE(4,SPEED) BROWSE INCDIR(.\Sources\User;.\Sources\User\include;.\Sources\FreeRTOS\include;.\Sources\FreeRTOS\portable\
                    -STC32G12K128;.\Sources\Driver\inc;.\Sources\Task\inc) DEBUG PRINT(.\Listings\STC32G_UART_Isr.lst) OBJECT(.\Objects\STC32
                    -G_UART_Isr.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          #include "STC32G_UART.h"
   14          
   15          bit B_ULinRX1_Flag;
   16          bit B_ULinRX2_Flag;
   17          
   18          //========================================================================
   19          // 函数: UART1_ISR_Handler
   20          // 描述: UART1中断函数.
   21          // 参数: none.
   22          // 返回: none.
   23          // 版本: V1.0, 2020-09-23
   24          //========================================================================
   25          #ifdef UART1
   26          void UART1_ISR_Handler (void) interrupt UART1_VECTOR
   27          {
   28   1              uint8_t Status;
   29   1      
   30   1              if(RI)
   31   1              {
   32   2                      RI = 0;
   33   2      
   34   2                      //--------USART LIN---------------
   35   2                      Status = USARTCR5;
   36   2                      if(Status & 0x02)     //if LIN header is detected
   37   2                      {
   38   3                              B_ULinRX1_Flag = 1;
   39   3                      }
   40   2      
   41   2                      if(Status & 0xc0)     //if LIN break is detected / LIN header error is detected
   42   2                      {
   43   3                              COM1.RX_Cnt = 0;
   44   3                      }
   45   2                      USARTCR5 &= ~0xcb;    //Clear flag
   46   2                      //--------------------------------
   47   2                      
   48   2                      if(COM1.B_RX_OK == 0)
   49   2                      {
   50   3                              if(COM1.RX_Cnt >= COM_RX1_Lenth)        COM1.RX_Cnt = 0;
   51   3                              RX1_Buffer[COM1.RX_Cnt++] = SBUF;
   52   3                              COM1.RX_TimeOut = TimeOutSet1;
   53   3                      }
   54   2              }
   55   1      
   56   1              if(TI)
C251 COMPILER V5.60.0,  STC32G_UART_Isr                                                    29/04/22  16:40:39  PAGE 2   

   57   1              {
   58   2                      TI = 0;
   59   2                      
   60   2                      if(COM1.TX_send != COM1.TX_write)
   61   2                      {
   62   3                              SBUF = TX1_Buffer[COM1.TX_send];
   63   3                              if(++COM1.TX_send >= COM_TX1_Lenth)             COM1.TX_send = 0;
   64   3                      }
   65   2                      else    COM1.B_TX_busy = 0;
   66   2              }
   67   1      }
   68          #endif
   69          
   70          //========================================================================
   71          // 函数: UART2_ISR_Handler
   72          // 描述: UART2中断函数.
   73          // 参数: none.
   74          // 返回: none.
   75          // 版本: V1.0, 2020-09-23
   76          //========================================================================
   77          #ifdef UART2
   78          void UART2_ISR_Handler (void) interrupt UART2_VECTOR
   79          {
   80   1              uint8_t Status;
   81   1      
   82   1              if(S2RI)
   83   1              {
   84   2                      CLR_RI2();
   85   2      
   86   2                      //--------USART LIN---------------
   87   2                      Status = USART2CR5;
   88   2                      if(Status & 0x02)     //if LIN header is detected
   89   2                      {
   90   3                              B_ULinRX2_Flag = 1;
   91   3                      }
   92   2      
   93   2                      if(Status & 0xc0)     //if LIN break is detected / LIN header error is detected
   94   2                      {
   95   3                              COM2.RX_Cnt = 0;
   96   3                      }
   97   2                      USART2CR5 &= ~0xcb;   //Clear flag
   98   2                      //--------------------------------
   99   2                      
  100   2                      if(COM2.B_RX_OK == 0)
  101   2                      {
  102   3                              if(COM2.RX_Cnt >= COM_RX2_Lenth)        COM2.RX_Cnt = 0;
  103   3                              RX2_Buffer[COM2.RX_Cnt++] = S2BUF;
  104   3                              COM2.RX_TimeOut = TimeOutSet2;
  105   3                      }
  106   2              }
  107   1      
  108   1              if(S2TI)
  109   1              {
  110   2                      CLR_TI2();
  111   2                      
  112   2                      if(COM2.TX_send != COM2.TX_write)
  113   2                      {
  114   3                              S2BUF = TX2_Buffer[COM2.TX_send];
  115   3                              if(++COM2.TX_send >= COM_TX2_Lenth)             COM2.TX_send = 0;
  116   3                      }
  117   2                      else    COM2.B_TX_busy = 0;
  118   2              }
  119   1      }
  120          #endif
  121          
  122          //========================================================================
C251 COMPILER V5.60.0,  STC32G_UART_Isr                                                    29/04/22  16:40:39  PAGE 3   

  123          // 函数: UART3_ISR_Handler
  124          // 描述: UART3中断函数.
  125          // 参数: none.
  126          // 返回: none.
  127          // 版本: V1.0, 2020-09-23
  128          //========================================================================
  129          #ifdef UART3
  130          void UART3_ISR_Handler (void) interrupt UART3_VECTOR
  131          {
  132   1              if(S3RI)
  133   1              {
  134   2                      CLR_RI3();
  135   2                      if(COM3.B_RX_OK == 0)
  136   2                      {
  137   3                              if(COM3.RX_Cnt >= COM_RX3_Lenth)        COM3.RX_Cnt = 0;
  138   3                              RX3_Buffer[COM3.RX_Cnt++] = S3BUF;
  139   3                              COM3.RX_TimeOut = TimeOutSet3;
  140   3                      }
  141   2              }
  142   1      
  143   1              if(S3TI)
  144   1              {
  145   2                      CLR_TI3();
  146   2                      
  147   2                      if(COM3.TX_send != COM3.TX_write)
  148   2                      {
  149   3                              S3BUF = TX3_Buffer[COM3.TX_send];
  150   3                              if(++COM3.TX_send >= COM_TX3_Lenth)             COM3.TX_send = 0;
  151   3                      }
  152   2                      else    COM3.B_TX_busy = 0;
  153   2              }
  154   1      }
  155          #endif
  156          
  157          //========================================================================
  158          // 函数: UART4_ISR_Handler
  159          // 描述: UART4中断函数.
  160          // 参数: none.
  161          // 返回: none.
  162          // 版本: V1.0, 2020-09-23
  163          //========================================================================
  164          #ifdef UART4
  165          void UART4_ISR_Handler (void) interrupt UART4_VECTOR
  166          {
  167   1              if(S4RI)
  168   1              {
  169   2                      CLR_RI4();
  170   2                      if(COM4.B_RX_OK == 0)
  171   2                      {
  172   3                              if(COM4.RX_Cnt >= COM_RX4_Lenth)        COM4.RX_Cnt = 0;
  173   3                              RX4_Buffer[COM4.RX_Cnt++] = S4BUF;
  174   3                              COM4.RX_TimeOut = TimeOutSet4;
  175   3                      }
  176   2              }
  177   1      
  178   1              if(S4TI)
  179   1              {
  180   2                      CLR_TI4();
  181   2                      
  182   2                      if(COM4.TX_send != COM4.TX_write)
  183   2                      {
  184   3                              S4BUF = TX4_Buffer[COM4.TX_send];
  185   3                              if(++COM4.TX_send >= COM_TX4_Lenth)             COM4.TX_send = 0;
  186   3                      }
  187   2                      else    COM4.B_TX_busy = 0;
  188   2              }
C251 COMPILER V5.60.0,  STC32G_UART_Isr                                                    29/04/22  16:40:39  PAGE 4   

  189   1      }
  190          #endif


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       534     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =         2     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
