C251 COMPILER V5.60.0,  STC32G_GPIO                                                        29/04/22  16:40:31  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE STC32G_GPIO
OBJECT MODULE PLACED IN .\Objects\STC32G_GPIO.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE Sources\Driver\src\STC32G_GPIO.c XSMALL FUNCTIONS(REENTRANT) OPTIMIZE(
                    -4,SPEED) BROWSE INCDIR(.\Sources\User;.\Sources\User\include;.\Sources\FreeRTOS\include;.\Sources\FreeRTOS\portable\STC3
                    -2G12K128;.\Sources\Driver\inc;.\Sources\Task\inc) DEBUG PRINT(.\Listings\STC32G_GPIO.lst) OBJECT(.\Objects\STC32G_GPIO.o
                    -bj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          #include        "STC32G_GPIO.h"
   14          
   15          //========================================================================
   16          // 函数: uint8_t        GPIO_Inilize(uint8_t GPIO, GPIO_InitTypeDef *GPIOx)
   17          // 描述: 初始化IO口.
   18          // 参数: GPIOx: 结构参数,请参考timer.h里的定义.
   19          // 返回: 成功返回 SUCCESS, 错误返回 FAIL.
   20          // 版本: V1.0, 2012-10-22
   21          //========================================================================
   22          uint8_t GPIO_Inilize(uint8_t GPIO, GPIO_InitTypeDef *GPIOx)
   23          {
   24   1              if(GPIO > GPIO_P7)                              return FAIL;    //错误
   25   1              if(GPIOx->Mode > GPIO_OUT_PP)   return FAIL;    //错误
   26   1              if(GPIO == GPIO_P0)
   27   1              {
   28   2                      if(GPIOx->Mode == GPIO_PullUp)          P0M1 &= ~GPIOx->Pin,    P0M0 &= ~GPIOx->Pin;     //上拉准双向口
   29   2                      if(GPIOx->Mode == GPIO_HighZ)                   P0M1 |=  GPIOx->Pin,    P0M0 &= ~GPIOx->Pin;     //浮空输入
   30   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P0M1 |=  GPIOx->Pin,    P0M0 |=  GPIOx->Pin;     //开漏输出
   31   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P0M1 &= ~GPIOx->Pin,    P0M0 |=  GPIOx->Pin;     //推挽输出
   32   2              }
   33   1              if(GPIO == GPIO_P1)
   34   1              {
   35   2                      if(GPIOx->Mode == GPIO_PullUp)          P1M1 &= ~GPIOx->Pin,    P1M0 &= ~GPIOx->Pin;     //上拉准双向口
   36   2                      if(GPIOx->Mode == GPIO_HighZ)                   P1M1 |=  GPIOx->Pin,    P1M0 &= ~GPIOx->Pin;     //浮空输入
   37   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P1M1 |=  GPIOx->Pin,    P1M0 |=  GPIOx->Pin;     //开漏输出
   38   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P1M1 &= ~GPIOx->Pin,    P1M0 |=  GPIOx->Pin;     //推挽输出
   39   2              }
   40   1              if(GPIO == GPIO_P2)
   41   1              {
   42   2                      if(GPIOx->Mode == GPIO_PullUp)          P2M1 &= ~GPIOx->Pin,    P2M0 &= ~GPIOx->Pin;     //上拉准双向口
   43   2                      if(GPIOx->Mode == GPIO_HighZ)                   P2M1 |=  GPIOx->Pin,    P2M0 &= ~GPIOx->Pin;     //浮空输入
   44   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P2M1 |=  GPIOx->Pin,    P2M0 |=  GPIOx->Pin;     //开漏输出
   45   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P2M1 &= ~GPIOx->Pin,    P2M0 |=  GPIOx->Pin;     //推挽输出
   46   2              }
   47   1              if(GPIO == GPIO_P3)
   48   1              {
   49   2                      if(GPIOx->Mode == GPIO_PullUp)          P3M1 &= ~GPIOx->Pin,    P3M0 &= ~GPIOx->Pin;     //上拉准双向口
   50   2                      if(GPIOx->Mode == GPIO_HighZ)                   P3M1 |=  GPIOx->Pin,    P3M0 &= ~GPIOx->Pin;     //浮空输入
   51   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P3M1 |=  GPIOx->Pin,    P3M0 |=  GPIOx->Pin;     //开漏输出
   52   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P3M1 &= ~GPIOx->Pin,    P3M0 |=  GPIOx->Pin;     //推挽输出
   53   2              }
   54   1              if(GPIO == GPIO_P4)
   55   1              {
   56   2                      if(GPIOx->Mode == GPIO_PullUp)          P4M1 &= ~GPIOx->Pin,    P4M0 &= ~GPIOx->Pin;     //上拉准双向口
C251 COMPILER V5.60.0,  STC32G_GPIO                                                        29/04/22  16:40:31  PAGE 2   

   57   2                      if(GPIOx->Mode == GPIO_HighZ)                   P4M1 |=  GPIOx->Pin,    P4M0 &= ~GPIOx->Pin;     //浮空输入
   58   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P4M1 |=  GPIOx->Pin,    P4M0 |=  GPIOx->Pin;     //开漏输出
   59   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P4M1 &= ~GPIOx->Pin,    P4M0 |=  GPIOx->Pin;     //推挽输出
   60   2              }
   61   1              if(GPIO == GPIO_P5)
   62   1              {
   63   2                      if(GPIOx->Mode == GPIO_PullUp)          P5M1 &= ~GPIOx->Pin,    P5M0 &= ~GPIOx->Pin;     //上拉准双向口
   64   2                      if(GPIOx->Mode == GPIO_HighZ)                   P5M1 |=  GPIOx->Pin,    P5M0 &= ~GPIOx->Pin;     //浮空输入
   65   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P5M1 |=  GPIOx->Pin,    P5M0 |=  GPIOx->Pin;     //开漏输出
   66   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P5M1 &= ~GPIOx->Pin,    P5M0 |=  GPIOx->Pin;     //推挽输出
   67   2              }
   68   1              if(GPIO == GPIO_P6)
   69   1              {
   70   2                      if(GPIOx->Mode == GPIO_PullUp)          P6M1 &= ~GPIOx->Pin,    P6M0 &= ~GPIOx->Pin;     //上拉准双向口
   71   2                      if(GPIOx->Mode == GPIO_HighZ)                   P6M1 |=  GPIOx->Pin,    P6M0 &= ~GPIOx->Pin;     //浮空输入
   72   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P6M1 |=  GPIOx->Pin,    P6M0 |=  GPIOx->Pin;     //开漏输出
   73   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P6M1 &= ~GPIOx->Pin,    P6M0 |=  GPIOx->Pin;     //推挽输出
   74   2              }
   75   1              if(GPIO == GPIO_P7)
   76   1              {
   77   2                      if(GPIOx->Mode == GPIO_PullUp)          P7M1 &= ~GPIOx->Pin,    P7M0 &= ~GPIOx->Pin;     //上拉准双向口
   78   2                      if(GPIOx->Mode == GPIO_HighZ)                   P7M1 |=  GPIOx->Pin,    P7M0 &= ~GPIOx->Pin;     //浮空输入
   79   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P7M1 |=  GPIOx->Pin,    P7M0 |=  GPIOx->Pin;     //开漏输出
   80   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P7M1 &= ~GPIOx->Pin,    P7M0 |=  GPIOx->Pin;     //推挽输出
   81   2              }
   82   1              return SUCCESS; //成功
   83   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       650     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
