C251 COMPILER V5.60.0,  STC32G_ADC                                                         29/04/22  16:40:28  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE STC32G_ADC
OBJECT MODULE PLACED IN .\Objects\STC32G_ADC.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE Sources\Driver\src\STC32G_ADC.c XSMALL FUNCTIONS(REENTRANT) OPTIMIZE(4
                    -,SPEED) BROWSE INCDIR(.\Sources\User;.\Sources\User\include;.\Sources\FreeRTOS\include;.\Sources\FreeRTOS\portable\STC32
                    -G12K128;.\Sources\Driver\inc;.\Sources\Task\inc) DEBUG PRINT(.\Listings\STC32G_ADC.lst) OBJECT(.\Objects\STC32G_ADC.obj)
                    - 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          #include "STC32G_ADC.h"
   14          
   15          //========================================================================
   16          // 函数: uint8_t        ADC_Inilize(ADC_InitTypeDef *ADCx)
   17          // 描述: ADC初始化程序.
   18          // 参数: ADCx: 结构参数,请参考adc.h里的定义.
   19          // 返回: none.
   20          // 版本: V1.0, 2012-10-22
   21          //========================================================================
   22          uint8_t ADC_Inilize(ADC_InitTypeDef *ADCx)
   23          {
   24   1              ADCCFG = (ADCCFG & ~ADC_SPEED_2X16T) | ADCx->ADC_Speed; //设置ADC工作时钟频率
   25   1              ADC_Justify(ADCx->ADC_AdjResult);               //AD转换结果对齐方式
   26   1      
   27   1              if(ADCx->ADC_SMPduty > 31)      return FAIL;    //错误
   28   1              if(ADCx->ADC_CsSetup > 1)       return FAIL;    //错误
   29   1              if(ADCx->ADC_CsHold > 3)        return FAIL;    //错误
   30   1      
   31   1              ADCTIM = (ADCx->ADC_CsSetup << 7) | (ADCx->ADC_CsHold << 5) | ADCx->ADC_SMPduty ;               //设置 ADC 内部时序，
             -ADC采样时间建议设最大值
   32   1              return SUCCESS;
   33   1      }
   34          
   35          
   36          //========================================================================
   37          // 函数: void ADC_PowerControl(uint8_t pwr)
   38          // 描述: ADC电源控制程序.
   39          // 参数: pwr: 电源控制,ENABLE或DISABLE.
   40          // 返回: none.
   41          // 版本: V1.0, 2012-10-22
   42          //========================================================================
   43          void ADC_PowerControl(uint8_t pwr)
   44          {
   45   1              if(pwr == ENABLE)       ADC_POWER = 1;
   46   1              else                            ADC_POWER = 0;
   47   1      }
   48          
   49          //========================================================================
   50          // 函数: uint16_t Get_ADCResult(uint8_t channel)
   51          // 描述: 查询法读一次ADC转换结果.
   52          // 参数: channel: 选择要转换的ADC通道.
   53          // 返回: ADC转换结果.
   54          // 版本: V1.0, 2012-10-22
   55          //========================================================================
C251 COMPILER V5.60.0,  STC32G_ADC                                                         29/04/22  16:40:28  PAGE 2   

   56          uint16_t Get_ADCResult(uint8_t channel) //channel = 0~15
   57          {
   58   1              uint16_t        adc;
   59   1              uint8_t i;
   60   1      
   61   1              if(channel > ADC_CH15)  return  4096;   //错误,返回4096,调用的程序判断  
   62   1              ADC_RES = 0;
   63   1              ADC_RESL = 0;
   64   1      
   65   1              ADC_CONTR = (ADC_CONTR & 0xf0) | channel; //设置ADC转换通道
   66   1              ADC_START = 1;//启动ADC转换
   67   1              NOP(10);                        //对ADC_CONTR操作后要4T之后才能访问
   68   1      
   69   1              for(i=0; i<250; i++)            //超时返回，正常i等于10以内就可以转换完成
   70   1              {
   71   2                      if(ADC_FLAG)
   72   2                      {
   73   3                              ADC_FLAG = 0;   //清除ADC转换结束标志
   74   3                              if(RESFMT)              //转换结果右对齐。 
   75   3                              {
   76   4                                      adc = ((uint16_t)ADC_RES << 8) | ADC_RESL;
   77   4                              }
   78   3                              else            //转换结果左对齐。 
   79   3                              {
   80   4                                      adc = (uint16_t)ADC_RES;
   81   4                                      adc = (adc << 4) | ((ADC_RESL >> 4) & 0x0f);
   82   4                              }
   83   3                              return  adc;
   84   3                      }
   85   2              }
   86   1              return  4096;   //错误,返回4096,调用的程序判断
   87   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       219     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
