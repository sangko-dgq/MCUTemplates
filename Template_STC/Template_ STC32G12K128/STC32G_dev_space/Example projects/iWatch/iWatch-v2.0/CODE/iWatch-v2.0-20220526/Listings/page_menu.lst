C251 COMPILER V5.60.0,  page_menu                                                          22/09/22  11:45:03  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE page_menu
OBJECT MODULE PLACED IN .\Objects\page_menu.obj
COMPILER INVOKED BY: D:\Application\Keil_C251\C251\BIN\C251.EXE User\PageManage\page_menu.c XSMALL ROM(HUGE) OPTIMIZE(8,
                    -SPEED) BROWSE INCDIR(.\User;.\User\oled_gui;.\User\oled_gui\oled_core;.\User\oled_gui\oled_widget;.\User\PageManage;.\Us
                    -er\Sensor;.\User\System;.\User\Bluetooth) DEBUG PRINT(.\Listings\page_menu.lst) TABS(2) OBJECT(.\Objects\page_menu.obj) 

stmt  level    source

    1          #include "iWatch.h"
    2          
    3          extern t_sPageList pagelist[PAGE_MAX];
    4          #define ICON_SUM (PAGE_MENU_MAX - PAGE_MENU_MIN - 1)
    5          #define ICON_GAP  72
    6          static unsigned char page_index = PAGE_MENU_MIN + 1;
    7          static t_psWidget text1, bmp1, title;
    8          static t_psWidget icon[ICON_SUM];
    9          static t_psGroup group1, group2;
   10          
   11          /**
   12            * @brief  页面初始化事件
   13            * @param  无
   14            * @retval 无
   15            */
   16          static void Setup(unsigned char condition)
   17          {
   18   1        unsigned char i;
   19   1        group2 = og_group_create(ICON_SUM);
   20   1        //页面图标
   21   1        for(i = 0; i < ICON_SUM; i++)
   22   1        {
   23   2          icon[i] = og_bmp_create((t_psBMP)pagelist[i + PAGE_MENU_MIN + 1].Icon, i * ICON_GAP + 40, 8);
   24   2          og_group_addWidget(group2, icon[i], 0);
   25   2        }
   26   1        og_group_setPosOffset(group2, 0, condition == PAGE_ENTER?64:-64);
   27   1        og_group_addAnimOffset(group2, -ICON_GAP * (page_index - PAGE_MENU_MIN - 1), condition == PAGE_ENTER?-64
             -:64, ANIM_TIME_NORM, ANIM_NULL_CB);
   28   1        //页面标题
   29   1        title = og_label_create(FONT_ASCII_5X7, 0, 56);
   30   1        og_label_setText(title, pagelist[page_index].Title);
   31   1        //令页面标题居中
   32   1        og_widget_setPos(title, 64 - title->w/2, title->y);
   33   1        //显示时间
   34   1        text1 = og_label_create(FONT_ASCII_5X7, 0, 0);
   35   1        lablel_printf(text1, "%02d:%02d", (int)time.hour, (int)time.minute)
   36   1        //显示电池电量图标
   37   1        bmp1 = og_bmp_create((t_psBMP)battery, 104, 0);
   38   1        
   39   1        group1 = og_group_create(3);
   40   1        og_group_addWidget(group1, title, 0);
   41   1        og_group_addWidget(group1, text1, 0);
   42   1        og_group_addWidget(group1, bmp1, 0);
   43   1        og_group_setPosOffset(group1, 0, condition == PAGE_ENTER?64:-64);
   44   1        og_group_addAnimOffset(group1, 0, condition == PAGE_ENTER?-64:64, ANIM_TIME_NORM, ANIM_NULL_CB);
   45   1      }
   46          static void delet(void)
   47          {
   48   1        og_group_delet(group1);
   49   1        og_group_delet(group2);
   50   1        pageSetStatus(page_menu, PAGE_IDLE);
   51   1      }
   52          /**
   53            * @brief  页面退出事件
   54            * @param  无
   55            * @retval 无
   56            */
C251 COMPILER V5.60.0,  page_menu                                                          22/09/22  11:45:03  PAGE 2   

   57          static void Exit(unsigned char condition)
   58          {
   59   1        og_group_addAnimOffset(group1, 0, condition == PAGE_ENTER?-64:64, ANIM_TIME_NORM, ANIM_NULL_CB);
   60   1        og_group_addAnimOffset(group2, ICON_GAP * (page_index - PAGE_MENU_MAX + 1), condition == PAGE_ENTER?-64:
             -64, ANIM_TIME_NORM, delet);
   61   1      }
   62          /**
   63            * @brief  页面循环执行的内容
   64            * @param  无
   65            * @retval 无
   66            */
   67          static void Loop()
   68          {
   69   1        if(pageExecuteRate(&Rate10Hz))
   70   1        {
   71   2          RX8130CEReadTime(&time);
   72   2          battery_life = iWatchGetBatteryLife();
   73   2          lablel_printf(text1, "%02d:%02d", (int)time.hour, (int)time.minute);
   74   2          battery_life = iWatchGetBatteryLife();
   75   2          og_bmp_setBmp(bmp1, (t_psBMP)DrawBatteryIcon(battery_life));
   76   2        }
   77   1      }
   78          /**
   79            * @brief  页面事件
   80            * @param  btn:发出事件的按键
   81            * @param  event:事件编号
   82            * @retval 无
   83            */
   84          static void Event(unsigned char event)
   85          {
   86   1        if(event == KEY1_PRESSED || event == AWT)
   87   1        {
   88   2          pageShift(page_watch, PAGE_RETURN);
   89   2        }
   90   1        else if(event == KEY3_PRESSED)
   91   1        {
   92   2          pageShift(page_index, PAGE_ENTER);
   93   2        }
   94   1        else 
   95   1        {
   96   2          unsigned char i = 0;
   97   2          int icon_move;
   98   2          if(event == KEY2_PRESSED)
   99   2          {
  100   3            if(++page_index == PAGE_MENU_MAX)
  101   3            {
  102   4              page_index = PAGE_MENU_MIN + 1;
  103   4              icon_move = ICON_GAP * (ICON_SUM - 1);
  104   4            }
  105   3            else
  106   3              icon_move = -ICON_GAP;
  107   3          }
  108   2          else if(event == KEY4_PRESSED)
  109   2          {
  110   3            if(--page_index == PAGE_MENU_MIN)
  111   3            {
  112   4              page_index = PAGE_MENU_MAX - 1;
  113   4              icon_move = -ICON_GAP * (ICON_SUM - 1);
  114   4            }
  115   3            else
  116   3              icon_move = ICON_GAP;
  117   3          }
  118   2          og_group_addAnimOffset(group2, icon_move, 0, ANIM_TIME_FAST, ANIM_NULL_CB);
  119   2          lablel_printf(title, "%s", pagelist[page_index].Title);
  120   2          og_widget_setPos(title, 64 - title->w/2, 56);
  121   2        }
C251 COMPILER V5.60.0,  page_menu                                                          22/09/22  11:45:03  PAGE 3   

  122   1      }
  123          void pageRegister_page_menu(unsigned char pageID)
  124          {
  125   1        pageRegister(pageID, NULL, NULL, Setup, Loop, Exit, Event);
  126   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =       926     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        69     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        18     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
