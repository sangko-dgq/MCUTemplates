C251 COMPILER V5.60.0,  QMC5883L                                                           23/08/22  22:51:21  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE QMC5883L
OBJECT MODULE PLACED IN .\Objects\QMC5883L.obj
COMPILER INVOKED BY: D:\Application\keilC251_v560\C251\BIN\C251.EXE User\Sensor\QMC5883L.c XSMALL ROM(HUGE) OPTIMIZE(8,S
                    -PEED) BROWSE INCDIR(.\User;.\User\oled_gui;.\User\oled_gui\oled_core;.\User\oled_gui\oled_widget;.\User\PageManage;.\Use
                    -r\Sensor;.\User\System;.\User\Bluetooth) DEBUG PRINT(.\Listings\QMC5883L.lst) TABS(2) OBJECT(.\Objects\QMC5883L.obj) 

stmt  level    source

    1          #include "QMC5883L.h"
    2          #include "IIC.h"
    3          #include "Delay.h"
    4          #include "math.h"
    5          
    6          /******************************设置参数*************************************/
    7          unsigned char OSR = 0;    //Over Sample Ratio
    8                                    //00 = 512; 01 = 256; 10 = 128; 11 = 64
    9          unsigned char ODR = 1;    //Typical Data Output Rate (Hz) 
   10                                    //00  10Hz
   11                                    //01  50Hz
   12                                    //10  100Hz
   13                                    //11  200Hz
   14          unsigned char RNG = 0;    //Full Scale
   15                                    //00  2G
   16                                    //01  8G
   17          unsigned char MOD = 0;    //Operating Mode 
   18                                    //00 = Standby
   19                                    //01 = Continuous(Default).
   20          /*****************************校准参数************************************/                     
   21          int mag_x_offset = 0, mag_y_offset = 0, mag_z_offset = 0;   //零位校准参数
   22          float mag_y_scale = 1, mag_z_scale = 1;                     //幅度校准参数
   23          /*************************************************************************/
   24          
   25          /**
   26            * @brief  使用IIC总线往QMC5883L的寄存器中写一字节数据
   27            * @param  addr: 寄存器的地址
   28            * @param  dat:  待写入的数据
   29            * @retval None
   30            */
   31          void QMC5883L_Write_Byte(unsigned char addr, unsigned char dat)
   32          {
   33   1        Single_WriteIIC(QMC5883L_IIC_ADDR, addr, dat);
   34   1      }
   35          /**
   36            * @brief  使用IIC总线从QMC5883L的寄存器中读一字节数据
   37            * @param  addr: 寄存器的地址
   38            * @retval 读出的一字节数据
   39            */
   40          unsigned char QMC5883L_Read_Byte(unsigned char addr)
   41          {
   42   1        return Single_ReadIIC(QMC5883L_IIC_ADDR, addr);
   43   1      }
   44          /**
   45            * @brief  检查与QMC5883L的连接是否正常
   46            * @param  无
   47            * @retval 1（成功），0（失败）
   48            */
   49          unsigned char QMC5883LCheckConnection(void)
   50          {
   51   1        if(QMC5883L_Read_Byte(0x0D) != 0xff)
   52   1          return 0;
   53   1        else
   54   1          return 1;
   55   1      }
   56          /**
   57            * @brief  从QMC5883L中读取读传感器原始数据
C251 COMPILER V5.60.0,  QMC5883L                                                           23/08/22  22:51:21  PAGE 2   

   58            * @param  buf：原始数据数组的指针，int*型
   59            * @retval 无
   60            */
   61          void QMC5883LRead(int *buf)
   62          {
   63   1        unsigned char temp[6];
   64   1        I2C_Read_MultiBytes(QMC5883L_IIC_ADDR, 0x00, 6, temp);
   65   1        buf[0] = (temp[1] << 8) | temp[0];
   66   1        buf[1] = (temp[3] << 8) | temp[2];
   67   1        buf[2] = (temp[5] << 8) | temp[4];
   68   1        buf[0] = -buf[0];
   69   1        buf[0] -= mag_x_offset;
   70   1        buf[1] -= mag_y_offset;
   71   1        buf[2] -= mag_z_offset;
   72   1        buf[1] *= mag_y_scale;
   73   1        buf[2] *= mag_z_scale;
   74   1      }
   75          /**
   76            * @brief  设置QMC5883L原始数据的校准参数
   77            * @param  tsCaliData *c: 校准参数的结构体指针
   78            * @retval 无
   79            */
   80          void QMC5883LSetCaliValue(tsCaliData *c)
   81          {
   82   1        mag_x_offset = c->X0;
   83   1        mag_y_offset = c->Y0;
   84   1        mag_z_offset = c->Z0;
   85   1        mag_y_scale = c->A / c->B;
   86   1        mag_z_scale = c->A / c->C;
   87   1      }
   88          /**
   89            * @brief  清除QMC5883L的校准参数
   90            * @param  无
   91            * @retval 无
   92            */
   93          void QMC5883LClearCaliValue(void)
   94          {
   95   1        mag_x_offset = 0;
   96   1        mag_y_offset = 0;;
   97   1        mag_z_offset = 0;
   98   1        mag_y_scale = 1;
   99   1        mag_z_scale = 1;
  100   1      }
  101          /**
  102            * @brief  设置QMC5883L的工作模式
  103            * @param  mode：0 休眠模式
  104            *               1 连续测量模式
  105            * @retval 无
  106            */
  107          void QMC5883LSetMode(unsigned char mode)
  108          {
  109   1        MOD = QMC5883L_Read_Byte(0x09);
  110   1        MOD &= (~0x03);
  111   1        QMC5883L_Write_Byte(0x09, MOD | mode);
  112   1      }
  113          /**
  114            * @brief  QMC5883L初始化函数
  115            * @param  无
  116            * @retval 0：失败
  117            *         1：成功
  118            */
  119          unsigned char QMC5883LInit(void)
  120          {
  121   1        unsigned char time_out = 200;
  122   1        while(QMC5883LCheckConnection() == 0)
  123   1        {
C251 COMPILER V5.60.0,  QMC5883L                                                           23/08/22  22:51:21  PAGE 3   

  124   2          Delay1ms(1);
  125   2          if(--time_out == 0)
  126   2            return 0;
  127   2        }
  128   1        QMC5883L_Write_Byte(0x09, (OSR << 6) | (RNG  << 4) | (ODR << 2) | MOD);
  129   1        QMC5883L_Write_Byte(0x0A, 0x40);
  130   1        QMC5883L_Write_Byte(0x0B, 0x01);
  131   1        return 1;
  132   1      }
  133          /**
  134            * @brief  根据x轴和y轴的倾角补偿磁偏角
  135            * @param  mag_data：三轴磁力数据
  136            *         ax，ay：x轴和y轴的倾角
  137            * @retval Yaw：补偿后的磁偏角弧度
  138            */
  139          float QMC5883LCalYaw(int *mag_data, float ax, float ay)
  140          {
  141   1        float Yaw, RadX, RadY, Xh, Yh;
  142   1        RadX = -ax / 57.2957795f;
  143   1        RadY = -ay / 57.2957795f;
  144   1        Xh = mag_data[0] * cos(RadX) + mag_data[1] * sin(RadY) * sin(RadX) - mag_data[2] * cos(RadY) * sin(RadX)
             -;
  145   1        Yh = mag_data[1] * cos(RadY) + mag_data[2] * sin(RadY);
  146   1        Yaw = (float)atan2(Yh, Xh) * 180.0 / 3.1415926 + 180.0;
  147   1        return Yaw;
  148   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =       719     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        18         26
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        54     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
