C251 COMPILER V5.60.0,  page_watch                                                         24/08/22  19:19:20  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE page_watch
OBJECT MODULE PLACED IN .\Objects\page_watch.obj
COMPILER INVOKED BY: D:\Application\keilC251_v560\C251\BIN\C251.EXE User\PageManage\page_watch.c XSMALL ROM(HUGE) OPTIMI
                    -ZE(8,SPEED) BROWSE INCDIR(.\User;.\User\oled_gui;.\User\oled_gui\oled_core;.\User\oled_gui\oled_widget;.\User\PageManage
                    -;.\User\Sensor;.\User\System;.\User\Bluetooth) DEBUG PRINT(.\Listings\page_watch.lst) TABS(2) OBJECT(.\Objects\page_watc
                    -h.obj) 

stmt  level    source

    1          #include "iWatch.h"
    2          #include "stdio.h"
    3          
    4          static t_psWidget digit[8];
    5          static t_psWidget text1;
    6          static t_psWidget bmp1, bmp2, bmp3;
    7          static t_psGroup group1;
    8          static unsigned char xdata str[18];
    9          static unsigned char xdata str_last[6];
   10          static unsigned char xdata change_step = 24, change_num = 0, change_index = 0;
   11          static unsigned char xdata digit_temp[6][98] = {{16,48}, {16,48}, {16,48}, {16,48}, {16,48}, {16,48}};
   12          unsigned char code WEEKDAY_IN_STR[7][6];
   13          unsigned char code DIGIT[10][96];
   14          unsigned char code COLON[98];
   15            
   16          unsigned char code CLOCK_BELL_ICON[10] = {
   17            8, 8,
   18            0x20,0x30,0x6E,0xA1,0xA1,0x6E,0x30,0x20
   19          };
   20          unsigned char code TIMER_ICON[10] = {
   21            8, 8,
   22            0x3C,0x42,0x81,0x9D,0x91,0x91,0x42,0x3C
   23          };
   24          
   25          void DisplayTimeInAnim(void);
   26            
   27          /**
   28            * @brief  页面初始化事件
   29            * @param  无
   30            * @retval 无
   31            */
   32          static void Setup(unsigned char condition)
   33          {
   34   1        unsigned char i, j;
   35   1        RX8130CEReadTime(&time);
   36   1        sprintf(str, "%02d%02d%02d", (int)time.hour, (int)time.minute, (int)time.second);
   37   1        for(i = 0; i < 6; i++)
   38   1        {
   39   2          for(j = 0; j < 96; j++)
   40   2            digit_temp[i][j+2] = DIGIT[str[i]-'0'][j];
   41   2        }
   42   1        for(i = 0; i < 6; i++)
   43   1          str_last[i] = str[i];
   44   1        //时间显示
   45   1        for(i = 0; i < 6; i++)
   46   1          digit[i] = og_bmp_create((t_psBMP)digit_temp[i], (i * 16 + (i /2) * 16), 8);
   47   1        digit[6] = og_bmp_create((t_psBMP)COLON, 32, 8);
   48   1        digit[7] = og_bmp_create((t_psBMP)COLON, 80, 8);
   49   1        //日期显示
   50   1        text1 = og_label_create(FONT_ASCII_5X7, 0, 56);
   51   1        //电池、闹钟计时器图标
   52   1        bmp1 = og_bmp_create((t_psBMP)battery, 104, 0);
   53   1        bmp2 = og_bmp_create((t_psBMP)CLOCK_BELL_ICON, 0, 0);
   54   1        og_widget_setShow(bmp2, config.alarm.mode);
   55   1        bmp3 = og_bmp_create((t_psBMP)TIMER_ICON, 0, 0);
   56   1        og_widget_setShow(bmp3, iWatchCheckStatus(IWATCH_TIMERON));
C251 COMPILER V5.60.0,  page_watch                                                         24/08/22  19:19:20  PAGE 2   

   57   1        group1 = og_group_create(12);
   58   1        for(i = 0; i < 8; i++)
   59   1          og_group_addWidget(group1, digit[i], 0);
   60   1        og_group_addWidget(group1, text1, 0);
   61   1        og_group_addWidget(group1, bmp1, 0);
   62   1        og_group_addWidget(group1, bmp2, 0);
   63   1        og_group_addWidget(group1, bmp3, 0);
   64   1        og_group_setPosOffset(group1, 0, -64);
   65   1        og_group_addAnimOffset(group1, 0, 64, ANIM_TIME_NORM, ANIM_NULL_CB);
   66   1      }
*** WARNING C47 IN LINE 32 OF User\PageManage\page_watch.c: 'condition': unreferenced parameter
   67          static void delet(void)
   68          {
   69   1        og_group_delet(group1);
   70   1        pageSetStatus(page_watch, PAGE_IDLE);
   71   1      }
   72          /**
   73            * @brief  页面退出事件
   74            * @param  无
   75            * @retval 无
   76            */
   77          static void Exit(unsigned char condition)
   78          {
   79   1        og_group_addAnimOffset(group1, 0, -64, ANIM_TIME_NORM, delet);
   80   1      }
*** WARNING C47 IN LINE 77 OF User\PageManage\page_watch.c: 'condition': unreferenced parameter
   81          /**
   82            * @brief  页面循环执行的内容
   83            * @param  无
   84            * @retval 无
   85            */
   86          static void Loop()
   87          {
   88   1        if(pageExecuteRate(&Rate10Hz))
   89   1        {
   90   2          char i;
   91   2          //显示小图标
   92   2          og_widget_setShow(bmp2, config.alarm.mode);
   93   2          og_widget_setPos(bmp3, config.alarm.mode?9:0, 0);
   94   2          og_widget_setShow(bmp3, iWatchCheckStatus(IWATCH_TIMERON));
   95   2          RX8130CEReadTime(&time);
   96   2          sprintf(str, "%02d%02d%02d", (int)time.hour, (int)time.minute, (int)time.second);
   97   2          if(change_step == 24)
   98   2          {
   99   3            for(i = 5; i >= 0; i--)
  100   3            {
  101   4              if(str[i] != str_last[i])
  102   4              {
  103   5                change_index = i;
  104   5                change_step = 0;
  105   5                change_num = str[i] - '0';
  106   5                str_last[i] = str[i];
  107   5                break;
  108   5              }
  109   4            }
  110   3          }
  111   2          lablel_printf(text1, "20%02u/%u/%u  %s", time.year, time.month, time.day, WEEKDAY_IN_STR[time.weekday -
             - 1]);
  112   2          battery_life = iWatchGetBatteryLife();
  113   2          og_bmp_setBmp(bmp1, (t_psBMP)DrawBatteryIcon(battery_life));
  114   2        }
  115   1        if(pageExecuteRate(&Rate125Hz))
  116   1        {
  117   2          DisplayTimeInAnim();
  118   2        }
  119   1      }
C251 COMPILER V5.60.0,  page_watch                                                         24/08/22  19:19:20  PAGE 3   

  120          /**
  121            * @brief  页面事件
  122            * @param  btn:发出事件的按键
  123            * @param  event:事件编号
  124            * @retval 无
  125            */
  126          static void Event(unsigned char event)
  127          {
  128   1        if(event == KEY1_PRESSED)
  129   1          iWatchSleep();
  130   1        else if(event == KEY2_PRESSED || event == KEY3_PRESSED ||event == KEY4_PRESSED)
  131   1        {
  132   2          pageShift(page_menu, PAGE_ENTER);
  133   2        }
  134   1      }
  135          void pageRegister_page_watch(unsigned char pageID)
  136          {
  137   1        pageRegister(pageID, NULL, NULL, Setup, Loop, Exit, Event);
  138   1      }
  139          
  140          unsigned char code WEEKDAY_IN_STR[7][6] = {
  141            "Mon. \0",
  142            "Tues.\0",
  143            "Wed. \0",
  144            "Thur.\0",
  145            "Fri. \0",
  146            "Sat. \0",
  147            "Sun. \0"
  148          };
  149          /****************************************16*48的点阵************************************/
  150          /******************************************数字0~9**************************************/
  151          unsigned char code DIGIT[10][96] = /* (16 X 48 , Tahoma, 加粗 )*/
  152          {
  153            {
  154              0x00,0x00,0xE0,0xF8,0xFC,0xFE,0xFE,0xFE,0xFE,0xFE,0xFC,0xF8,0xE0,0x00,0x00,0x00,
  155              0xE0,0xFF,0xFF,0xFF,0xFF,0x1F,0x03,0x01,0x03,0x1F,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,
  156              0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,
  157              0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,
  158              0x07,0xFF,0xFF,0xFF,0xFF,0xF8,0xC0,0x80,0xC0,0xF8,0xFF,0xFF,0xFF,0xFF,0x07,0x00,
  159              0x00,0x00,0x07,0x1F,0x3F,0x7F,0x7F,0x7F,0x7F,0x7F,0x3F,0x1F,0x07,0x00,0x00,0x00/*"0",0*/
  160            },
  161            {
  162              0x00,0x00,0x00,0x00,0x80,0xC0,0xFC,0xFC,0xFC,0xFC,0xFC,0x00,0x00,0x00,0x00,0x00,
  163              0x00,0x00,0x7F,0x7F,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,
  164              0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,
  165              0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,
  166              0x00,0x00,0xC0,0xC0,0xC0,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xC0,0xC0,0xC0,0x00,
  167              0x00,0x00,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x00/*"1",1*/
  168            },
  169            {
  170              0x00,0xF8,0xF8,0xFC,0xFE,0xFE,0xFE,0xFE,0xFE,0xFC,0xFC,0xF8,0xE0,0x00,0x00,0x00,
  171              0x00,0x1F,0x0F,0x07,0x03,0x03,0x03,0x07,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,
  172              0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,
  173              0x00,0x00,0x00,0x00,0x00,0xC0,0xF8,0xFE,0xFF,0xFF,0x7F,0x0F,0x01,0x00,0x00,0x00,
  174              0x00,0xC0,0xF0,0xFC,0xFF,0xFF,0xFF,0xDF,0xC7,0xC1,0xC0,0xC0,0xC0,0xC0,0xC0,0x00,
  175              0x00,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x00/*"2",2*/
  176            },
  177            {
  178              0x00,0xF8,0xF8,0xFC,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFC,0xF8,0xF0,0x80,0x00,0x00,
  179              0x00,0x1F,0x0F,0x07,0x03,0x03,0x03,0x03,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,
  180              0x00,0x00,0x00,0x00,0xF8,0xF8,0xF8,0xFC,0xFE,0xFF,0xFF,0xBF,0x0F,0x01,0x00,0x00,
  181              0x00,0x00,0x00,0x00,0x07,0x07,0x07,0x07,0x0F,0x1F,0xFF,0xFF,0xFF,0xFE,0xF0,0x00,
  182              0xF8,0xF0,0xE0,0xE0,0xC0,0xC0,0xC0,0xC0,0xE0,0xF0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,
  183              0x1F,0x1F,0x3F,0x3F,0x7F,0x7F,0x7F,0x7F,0x7F,0x3F,0x3F,0x1F,0x0F,0x03,0x00,0x00/*"3",3*/
  184            },
  185            {
C251 COMPILER V5.60.0,  page_watch                                                         24/08/22  19:19:20  PAGE 4   

  186              0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xF8,0xFC,0xFC,0xFC,0xFC,0xFC,0x00,0x00,0x00,
  187              0x00,0x00,0x00,0x00,0xE0,0xFC,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,
  188              0x00,0x80,0xF0,0xFF,0xFF,0x3F,0x03,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,
  189              0xFC,0xFF,0xFF,0xFF,0xF1,0xF0,0xF0,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0xF0,0xF0,
  190              0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x0F,0x0F,
  191              0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x3F,0x3F,0x3F,0x3F,0x00,0x00,0x00/*"4",4*/
  192            },
  193            {
  194              0x00,0x00,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0x00,0x00,
  195              0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x00,0x00,
  196              0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xFC,0xFC,0xFC,0xF8,0xF0,0xC0,0x00,0x00,
  197              0x00,0x00,0x07,0x07,0x03,0x03,0x03,0x03,0x07,0x0F,0xFF,0xFF,0xFF,0xFF,0xFE,0x00,
  198              0x00,0xF8,0xF0,0xE0,0xC0,0xC0,0xC0,0xC0,0xE0,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,
  199              0x00,0x1F,0x3F,0x3F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x3F,0x1F,0x0F,0x01,0x00,0x00/*"5",5*/
  200            },
  201            {
  202              0x00,0x00,0x80,0xE0,0xF0,0xF8,0xFC,0xFE,0xFE,0xFE,0xFE,0xFE,0xFC,0x00,0x00,0x00,
  203              0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x0F,0x03,0x01,0x01,0x01,0x01,0x03,0x00,0x00,0x00,
  204              0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0xFC,0xFE,0xFE,0xFE,0xFE,0xFC,0xF8,0xE0,0x00,0x00,
  205              0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x01,0x01,0x03,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,
  206              0x07,0xFF,0xFF,0xFF,0xFF,0xF8,0xC0,0x80,0x80,0xE0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,
  207              0x00,0x00,0x07,0x1F,0x3F,0x3F,0x7F,0x7F,0x7F,0x7F,0x3F,0x1F,0x0F,0x01,0x00,0x00/*"6",6*/
  208            },
  209            {
  210              0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0x00,
  211              0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0xC3,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,
  212              0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFC,0xFF,0xFF,0xFF,0xFF,0x1F,0x01,0x00,0x00,
  213              0x00,0x00,0x00,0x00,0x80,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x03,0x00,0x00,0x00,0x00,
  214              0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x7F,0x03,0x00,0x00,0x00,0x00,0x00,0x00,
  215              0x00,0x30,0x3F,0x3F,0x3F,0x3F,0x3F,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00/*"7",7*/
  216            },
  217            {
  218              0x00,0x00,0xE0,0xF8,0xFC,0xFC,0xFE,0xFE,0xFE,0xFE,0xFC,0xFC,0xF8,0xE0,0x80,0x00,
  219              0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x01,0x01,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,
  220              0x00,0x07,0x3F,0xFF,0xFF,0xFF,0xFF,0xFC,0xF8,0xFC,0xFF,0xFF,0x1F,0x07,0x00,0x00,
  221              0xE0,0xFC,0xFE,0xFF,0xFF,0x0F,0x07,0x0F,0x1F,0x3F,0xFF,0xFF,0xFF,0xFE,0xF0,0x00,
  222              0x7F,0xFF,0xFF,0xFF,0xFF,0xE0,0xC0,0x80,0x80,0xE0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,
  223              0x00,0x07,0x0F,0x1F,0x3F,0x7F,0x7F,0x7F,0x7F,0x7F,0x3F,0x1F,0x0F,0x03,0x00,0x00/*"8",8*/
  224            },
  225            {
  226              0x00,0x80,0xE0,0xF8,0xFC,0xFE,0xFE,0xFE,0xFE,0xFE,0xFC,0xF8,0xE0,0x80,0x00,0x00,
  227              0xF8,0xFF,0xFF,0xFF,0xFF,0x0F,0x01,0x01,0x03,0x0F,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,
  228              0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0xC0,0x80,0x80,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,
  229              0x00,0x07,0x1F,0x3F,0x7F,0x7F,0x7F,0x7F,0x3F,0x1F,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,
  230              0x00,0x00,0xC0,0x80,0x80,0x80,0x80,0xC0,0xF0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,
  231              0x00,0x00,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x3F,0x1F,0x0F,0x07,0x00,0x00,0x00,0x00/*"9",9*/
  232            }
  233          };
  234          unsigned char code COLON[98] = {  
  235            16, 48,
  236            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  237            0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,
  238            0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,
  239            0x00,0x00,0x00,0x00,0x00,0xE0,0xE0,0xE0,0xE0,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,
  240            0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,
  241            0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00/*":"*/
  242          };
  243          
  244          
  245          void DisplayTimeInAnim(void)
  246          {
  247   1        unsigned int k, num1, num2, temp;
  248   1        unsigned char j, num3;
  249   1        if(change_step < 24)
  250   1        {
  251   2          unsigned char *ptr = digit_temp[change_index] + 2;
C251 COMPILER V5.60.0,  page_watch                                                         24/08/22  19:19:20  PAGE 5   

  252   2          for(j = 0; j < 5; j ++)
  253   2          {
  254   3            num1 = j << 4;
  255   3            num2 = num1 + 16;
  256   3            for(k = num1; k < num2; k++)
  257   3            {
  258   4              temp = (ptr[k + 16] << 8) | ptr[k];
  259   4              ptr[k] = (temp >> 2);
  260   4            }
  261   3          }
  262   2          num1 = j << 4;
  263   2          num2 = (change_step / 4) << 4;
  264   2          num3 = 6 - ((change_step % 4) << 1);
  265   2          for(k = 0; k < 16; k++) 
  266   2          {
  267   3            ptr[num1 + k] = (ptr[num1 + k] >> 2) | ((DIGIT[change_num][num2 + k] << num3) & 0xC0);  
  268   3          }
  269   2          change_step++;
  270   2        }
  271   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1120     ------
  ecode size           =      1190     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =       613     ------
  xdata-const size     =    ------     ------
  edata size           =        54     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       639     ------
End of Module Information.


C251 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
