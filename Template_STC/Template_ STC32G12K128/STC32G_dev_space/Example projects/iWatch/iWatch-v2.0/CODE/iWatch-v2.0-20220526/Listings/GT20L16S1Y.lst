C251 COMPILER V5.60.0,  GT20L16S1Y                                                         22/09/22  11:45:00  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE GT20L16S1Y
OBJECT MODULE PLACED IN .\Objects\GT20L16S1Y.obj
COMPILER INVOKED BY: D:\Application\Keil_C251\C251\BIN\C251.EXE User\oled_gui\GT20L16S1Y.c XSMALL ROM(HUGE) OPTIMIZE(8,S
                    -PEED) BROWSE INCDIR(.\User;.\User\oled_gui;.\User\oled_gui\oled_core;.\User\oled_gui\oled_widget;.\User\PageManage;.\Use
                    -r\Sensor;.\User\System;.\User\Bluetooth) DEBUG PRINT(.\Listings\GT20L16S1Y.lst) TABS(2) OBJECT(.\Objects\GT20L16S1Y.obj)
                    - 

stmt  level    source

    1          #define _GT20L16S1Y_C
    2          #include "GT20L16S1Y.h"
    3          #include "SPI.h"
    4          
    5          void GT20L16S1YGetCharASCII_5X7(unsigned char s, unsigned char *ptr)
    6          {
    7   1        unsigned long addr = font_addr[ASCII_5X7] + (s - 0x20) * 8;
    8   1        GT20L16S1YClrCS();
    9   1        SPI_WriteByte(0x03);
   10   1        SPI_WriteMultiBytes((unsigned char *)&addr + 1, 3);
   11   1        SPI_ReadMultiBytes(ptr, 5);
   12   1        //ptr[i] = 0;
   13   1        GT20L16S1YSetCS();
   14   1      }
   15          void GT20L16S1YGetCharASCII_7X8(unsigned char s, unsigned char *ptr)
   16          {
   17   1        unsigned long addr = font_addr[ASCII_7X8] + ((unsigned long)(s - 0x20) << 3);
   18   1        GT20L16S1YClrCS();
   19   1        SPI_WriteByte(0x03);
   20   1        SPI_WriteMultiBytes((unsigned char *)&addr + 1, 3);
   21   1        SPI_ReadMultiBytes(ptr, 7);
   22   1        //ptr[i] = 0;
   23   1        GT20L16S1YSetCS();
   24   1      }
   25          void GT20L16S1YGetCharASCII_8X16(unsigned char s, unsigned char *ptr, unsigned int offset)
   26          {
   27   1        unsigned long addr = font_addr[ASCII_8X16] + ((unsigned long)(s - 0x20) << 4);
   28   1        GT20L16S1YClrCS();
   29   1        SPI_WriteByte(0x03);
   30   1        SPI_WriteMultiBytes((unsigned char *)&addr + 1, 3);
   31   1        SPI_ReadMultiBytes(ptr, 8);
   32   1        ptr += offset;
   33   1        SPI_ReadMultiBytes(ptr, 8);
   34   1        GT20L16S1YSetCS();
   35   1      }
   36          void GT20L16S1YGetCharASCII_8X16_BOLD(unsigned char s, unsigned char *ptr, unsigned int offset)
   37          {
   38   1        unsigned long addr = font_addr[ASCII_8X16_BOLD] + ((unsigned long)(s - 0x20) << 4);
   39   1        GT20L16S1YClrCS();
   40   1        SPI_WriteByte(0x03);
   41   1        SPI_WriteMultiBytes((unsigned char *)&addr + 1, 3);
   42   1        SPI_ReadMultiBytes(ptr, 8);
   43   1        ptr += offset;
   44   1        SPI_ReadMultiBytes(ptr, 8);
   45   1        GT20L16S1YSetCS();
   46   1      }
   47          void GT20L16S1YGetCharGB2312_15X16(unsigned int s, unsigned char *ptr, unsigned int offset)
   48          {
   49   1        unsigned long addr;
   50   1        if(s >= 0xB0A1)
   51   1          addr = font_addr[GB2312_15X16] + ((unsigned long)((s >> 8) - 0xB0) * 94 + (s & 0x00ff) - 0xA1 + 846) <<
             - 5;
   52   1        else if((s & 0xff00) <= 0xA300)
   53   1          addr = font_addr[GB2312_15X16] + ((unsigned long)((s >> 8) - 0xA1) * 94 + (s & 0x00ff) - 0xA1) << 5;
   54   1        GT20L16S1YClrCS();
   55   1        SPI_WriteByte(0x03);
C251 COMPILER V5.60.0,  GT20L16S1Y                                                         22/09/22  11:45:00  PAGE 2   

   56   1        SPI_WriteMultiBytes((unsigned char *)&addr + 1, 3);
   57   1        SPI_ReadMultiBytes(ptr, 16);
   58   1        ptr += offset;
   59   1        SPI_ReadMultiBytes(ptr, 16);
   60   1        GT20L16S1YSetCS();
   61   1      }
   62          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =       537     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------         26
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        24     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
