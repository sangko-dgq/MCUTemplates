C251 COMPILER V5.60.0,  page_snake                                                         22/09/22  11:45:03  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE page_snake
OBJECT MODULE PLACED IN .\Objects\page_snake.obj
COMPILER INVOKED BY: D:\Application\Keil_C251\C251\BIN\C251.EXE User\PageManage\page_snake.c XSMALL ROM(HUGE) OPTIMIZE(8
                    -,SPEED) BROWSE INCDIR(.\User;.\User\oled_gui;.\User\oled_gui\oled_core;.\User\oled_gui\oled_widget;.\User\PageManage;.\U
                    -ser\Sensor;.\User\System;.\User\Bluetooth) DEBUG PRINT(.\Listings\page_snake.lst) TABS(2) OBJECT(.\Objects\page_snake.ob
                    -j) 

stmt  level    source

    1          #include "iWatch.h"
    2          
    3          #define PANEL_WIDTH   92
    4          #define PANEL_HEIGHT  64
    5          #define MAX_SNAKE_SPEED 50
    6          #define CONTROL_SENSITIVITY 10  //控制的灵敏度，越小越灵敏
    7          static unsigned char XDATA i = 0;
    8          static unsigned char XDATA snake_direction = 0; //蛇当前的前进方向
    9          static unsigned char XDATA snake_speed = 10;    //蛇当前的前进速度
   10          static unsigned char XDATA past_x[256];
   11          static unsigned char XDATA past_y[256];
   12          static unsigned char XDATA snake_head_x = 64, snake_head_y = 32, snake_len = 20;
   13          static unsigned char XDATA test_now = 0, delicious_x= 80,delicious_y = 40;
   14          static unsigned char XDATA best_score = 0;  //最佳成绩
   15          static bit game_loop = 0;
   16          static bit game_over = 0;
   17          static bit game_pause = 0;
   18          
   19          static unsigned char CODE Icon[] = {
   20            48, 48,
   21            0x00,0x00,0xE0,0xE0,0x38,0x38,0x38,0x38,0x38,0x38,0x00,0xF8,0xF8,0xF0,0xC0,0xC0,
   22            0x00,0x00,0xF8,0xF8,0x00,0xC0,0xF8,0xF8,0x38,0x38,0x38,0xF8,0xF8,0xC0,0x00,0xF8,
   23            0xF8,0x00,0x00,0xC0,0xF8,0x38,0x00,0xC0,0xF0,0xF8,0x38,0x38,0x38,0x38,0x38,0x00,
   24            0x00,0x00,0x07,0x07,0x0C,0x0C,0x0C,0x0C,0xF8,0xF8,0x00,0xFF,0xFF,0xFF,0x00,0x03,
   25            0x0F,0x0C,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0x0C,0x0C,0x0C,0xFF,0xFF,0xFF,0x00,0xFF,
   26            0xFF,0x1C,0x7F,0xF3,0xC0,0x00,0x00,0xFF,0xFF,0xFF,0x0C,0x0C,0x0C,0x0C,0x00,0x00,
   27            0x00,0x00,0x07,0x07,0x07,0x07,0x07,0x07,0x03,0x03,0x00,0x07,0x07,0x07,0x00,0x00,
   28            0x00,0x00,0x07,0x07,0x00,0x07,0x07,0x07,0x00,0x00,0x00,0x07,0x07,0x07,0x00,0x07,
   29            0x07,0x00,0x00,0x01,0x07,0x07,0x00,0x01,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x00,
   30            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
   31            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,
   32            0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0x00,0x00,0x00,0xF8,0xF8,0xF8,0x38,0x38,0xF8,0xF8,
   33            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0E,0x0E,
   34            0x0E,0x00,0x00,0x0E,0x0E,0x0E,0x0E,0x0E,0x0E,0xFE,0xFE,0xFE,0xC0,0xC0,0xFF,0xFF,
   35            0xFF,0x01,0x01,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,
   36            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
   37            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
   38            0x01,0x00,0x00,0x0F,0x0F,0x0F,0x0E,0x0E,0x0E,0x0F,0x0F,0x0F,0x00,0x00,0x7F,0x7F
   39            /* (48 X 48 )*/
   40          };
   41          static t_psWidget text1, text2, label_score, label_best, label_game;
   42          static t_psWidget canvas1;
   43          static t_psGroup group1;
   44          
   45          /**
   46            * @brief  页面初始化事件
   47            * @param  无
   48            * @retval 无
   49            */
   50          static void Setup(unsigned char condition)
   51          {
   52   1        unsigned char i;
   53   1        text1 = og_label_create(FONT_ASCII_5X7, 93, 0);
   54   1        og_label_setText(text1, "Score:");
   55   1        label_score = og_label_create(FONT_ASCII_5X7, 93, 8);
   56   1        text2 = og_label_create(FONT_ASCII_5X7, 93, 40);
C251 COMPILER V5.60.0,  page_snake                                                         22/09/22  11:45:03  PAGE 2   

   57   1        og_label_setText(text2, "Best:");
   58   1        label_best = og_label_create(FONT_ASCII_5X7, 93, 48);
   59   1        label_game = og_label_create(FONT_ASCII_7X8, 34, -8);
   60   1        og_label_setText(label_game, "Game over!");
   61   1        og_widget_setAlignment(label_game, ALIGN_HORIZONMID);
   62   1        og_widget_setShow(label_game, 0);
   63   1        canvas1 = og_canvas_create(92, 64, 0, 0);
   64   1        og_canvas_drawRectangle(canvas1, 92, 64, 0, 0);
   65   1        group1 = og_group_create(6);
   66   1        og_group_addWidget(group1, text1, 0);
   67   1        og_group_addWidget(group1, text2, 0);
   68   1        og_group_addWidget(group1, label_score, 0);
   69   1        og_group_addWidget(group1, label_best, 0);
   70   1        og_group_addWidget(group1, label_game, 0);
   71   1        og_group_addWidget(group1, canvas1, 0);
   72   1        og_group_setPosOffset(group1, 0, 64);
   73   1        og_group_addAnimOffset(group1, 0, -64, ANIM_TIME_NORM, ANIM_NULL_CB);
   74   1        LSM6DSMConfigAcc(ACC_ODR_208_HZ, ACC_SCALE_4_G);
   75   1        LSM6DSMConfigGyr(GYR_ODR_208_HZ, GYR_SCALE_500_DPS);
   76   1        srand((time.second << 8) | time.minute);    //随便整个数作为随机数播种
   77   1        snake_direction = 0;
   78   1        snake_head_x = 64;
   79   1        snake_head_y = 32;
   80   1        snake_len = 20;
   81   1        game_over = 0;
   82   1        game_pause = 0;
   83   1        for(i = 0; i < snake_len; i++)
   84   1        {
   85   2          past_x[i] = 64;
   86   2          past_y[i] = 32;
   87   2        }
   88   1      }
*** WARNING C47 IN LINE 50 OF User\PageManage\page_snake.c: 'condition': unreferenced parameter
   89          static void delet(void)
   90          {
   91   1        og_group_delet(group1);
   92   1        pageSetStatus(page_snake, PAGE_IDLE);
   93   1      }
   94          /**
   95            * @brief  页面退出事件
   96            * @param  无
   97            * @retval 无
   98            */
   99          static void Exit(unsigned char condition)
  100          {
  101   1        if(config.lsm6dsm_cfg == 0)
  102   1          LSM6DSMConfigAcc(ACC_POWER_DOWN, ACC_SCALE_4_G);
  103   1        else
  104   1          LSM6DSMConfigAcc(ACC_ODR_26_HZ, ACC_SCALE_4_G);
  105   1        LSM6DSMConfigGyr(GYR_POWER_DOWN, GYR_SCALE_500_DPS);
  106   1        og_group_addAnimOffset(group1, 0, 64, ANIM_TIME_NORM, delet);
  107   1      }
*** WARNING C47 IN LINE 99 OF User\PageManage\page_snake.c: 'condition': unreferenced parameter
  108          /**
  109            * @brief  页面循环执行的内容
  110            * @param  无
  111            * @retval 无
  112            */
  113          static void Loop()
  114          {
  115   1        if(pageExecuteRate(&Rate125Hz))
  116   1        {
  117   2          iWatchKeepActive();
  118   2          
  119   2          /* Fix
  120   2          LSM6DSMReadGYRAndACC(&LSM6DSM);
C251 COMPILER V5.60.0,  page_snake                                                         22/09/22  11:45:03  PAGE 3   

  121   2          IMUupdate(&LSM6DSM);
  122   2          */
  123   2        }
  124   1        if(pageExecuteRate(&Rate1000Hz))
  125   1        {
  126   2          static unsigned char t_cnt = 0;
  127   2          if(++t_cnt == (MAX_SNAKE_SPEED - snake_speed))
  128   2          {
  129   3            t_cnt = 0;
  130   3            game_loop = 1;
  131   3          }
  132   2          if(game_loop)
  133   2          {
  134   3            game_loop = 0;
  135   3            if(game_pause != 1)
  136   3            {
  137   4              og_canvas_clear(canvas1);
  138   4              og_canvas_drawRectangle(canvas1, 92, 64, 0, 0);
  139   4              lablel_printf(label_score, "%u", snake_len);
  140   4              if(snake_len > best_score)
  141   4              best_score = snake_len;
  142   4              lablel_printf(label_best, "%u", best_score);
  143   4              
  144   4              if(snake_direction == 0)
  145   4              {
  146   5                if(LSM6DSM.AngleY > CONTROL_SENSITIVITY)
  147   5                  snake_direction = 1;
  148   5                else if(LSM6DSM.AngleY < -CONTROL_SENSITIVITY)
  149   5                  snake_direction = 3;
  150   5              }
  151   4              else if(snake_direction == 1)
  152   4              {
  153   5                if(LSM6DSM.AngleX > CONTROL_SENSITIVITY)
  154   5                  snake_direction = 0;
  155   5                else if(LSM6DSM.AngleX < -CONTROL_SENSITIVITY)
  156   5                  snake_direction = 2;
  157   5              }
  158   4              else if(snake_direction == 2)
  159   4              {
  160   5                if(LSM6DSM.AngleY > CONTROL_SENSITIVITY)
  161   5                  snake_direction = 1;
  162   5                else if(LSM6DSM.AngleY < -CONTROL_SENSITIVITY)
  163   5                  snake_direction = 3;
  164   5              }
  165   4              else if(snake_direction == 3)
  166   4              {
  167   5                if(LSM6DSM.AngleX > CONTROL_SENSITIVITY)
  168   5                  snake_direction = 0;
  169   5                else if(LSM6DSM.AngleX < -CONTROL_SENSITIVITY)
  170   5                  snake_direction = 2;
  171   5              }
  172   4              //这段是按键程序解析后转换为方向以及点位置的程序，
  173   4              //sneak_direction是方向，test_x是头部的x轴值，test_y是头部的y轴值
  174   4              switch(snake_direction)
  175   4              {
  176   5                case 0:   //右
  177   5                  snake_head_x++;
  178   5                  break;
  179   5                case 1:   //下
  180   5                  snake_head_y++;
  181   5                  break;
  182   5                case 2:   //左
  183   5                  snake_head_x--;
  184   5                  break;
  185   5                case 3:   //上
  186   5                  snake_head_y--;
C251 COMPILER V5.60.0,  page_snake                                                         22/09/22  11:45:03  PAGE 4   

  187   5                  break;
  188   5              }
  189   4              if(snake_head_x >= PANEL_WIDTH)
  190   4                snake_head_x = 1;
  191   4              else if(snake_head_x <= 0)
  192   4                snake_head_x = PANEL_WIDTH - 1;
  193   4              if(snake_head_y >= PANEL_HEIGHT)
  194   4                snake_head_y = 1;
  195   4              else if(snake_head_y <= 0)
  196   4                snake_head_y = PANEL_HEIGHT - 1;
  197   4              //检查是否碰到自己的身体
  198   4              for(i = 0; i < snake_len; i++)
  199   4              {
  200   5                if((snake_head_x == past_x[i]) && (snake_head_y == past_y[i]))
  201   5                {
  202   6                  og_widget_setShow(label_game, 1);
  203   6                  og_anim_create(label_game, label_game->x, 24, ANIM_TIME_NORM, ANIM_NULL_CB);
  204   6                  game_over = 1;
  205   6                  game_pause = 1;
  206   6                  break;
  207   6                }
  208   5              }
  209   4              //这段是可以让贪吃蛇有可变长度尾巴的测试程序，test_num就是尾巴的数量，最大50，
  210   4              //程序原理是把每次过去的坐标都记录在数组里面。显示的时候就把过去的点也都显示出来
  211   4              test_now++;
  212   4              test_now = test_now % snake_len;
  213   4              past_x[test_now] = snake_head_x;
  214   4              past_y[test_now] = snake_head_y;
  215   4              for(i = 0; i < snake_len; i++)
  216   4              {
  217   5                og_canvas_drawDot(canvas1, past_x[i], past_y[i]);
  218   5              }
  219   4              //这段程序放被吃掉的小东西，设计delicious_x,delicious_y为食物的坐标
  220   4              //吃掉食物以后会放一个新的食物，并且test_num也就是尾巴的数量会大1
  221   4              if((snake_head_x <= delicious_x+1) && (snake_head_y <= delicious_y+1) && (snake_head_x >= delicious_x
             --1) && (snake_head_y>=delicious_y-1))
  222   4              {
  223   5                snake_len++;
  224   5                past_x[snake_len - 1] = past_x[snake_len - 2];//解决小白点的问题
  225   5                past_y[snake_len - 1] = past_y[snake_len - 2];
  226   5                if(config.key_sound)
  227   5                  Bee();
  228   5                delicious_x = rand() % 92;
  229   5                if(delicious_x > PANEL_WIDTH - 2)
  230   5                  delicious_x = PANEL_WIDTH - 2;
  231   5                else if(delicious_x < 2)
  232   5                  delicious_x  = 2;
  233   5                delicious_y = rand() % 64;
  234   5                if(delicious_y > PANEL_HEIGHT - 2)
  235   5                  delicious_y = PANEL_HEIGHT - 2;
  236   5                else if(delicious_y < 2)
  237   5                  delicious_y  = 2;
  238   5              }
  239   4              og_canvas_drawDot(canvas1, delicious_x,delicious_y);
  240   4              og_canvas_drawDot(canvas1, delicious_x+1,delicious_y);
*** WARNING C188 IN LINE 240 OF User\PageManage\page_snake.c: 'parameter 2': value truncated
  241   4              og_canvas_drawDot(canvas1, delicious_x-1,delicious_y);
*** WARNING C188 IN LINE 241 OF User\PageManage\page_snake.c: 'parameter 2': value truncated
  242   4              og_canvas_drawDot(canvas1, delicious_x,delicious_y+1);
*** WARNING C188 IN LINE 242 OF User\PageManage\page_snake.c: 'parameter 3': value truncated
  243   4              og_canvas_drawDot(canvas1, delicious_x+1,delicious_y+1);
*** WARNING C188 IN LINE 243 OF User\PageManage\page_snake.c: 'parameter 2': value truncated
*** WARNING C188 IN LINE 243 OF User\PageManage\page_snake.c: 'parameter 3': value truncated
  244   4              og_canvas_drawDot(canvas1, delicious_x-1,delicious_y+1);
*** WARNING C188 IN LINE 244 OF User\PageManage\page_snake.c: 'parameter 2': value truncated
*** WARNING C188 IN LINE 244 OF User\PageManage\page_snake.c: 'parameter 3': value truncated
C251 COMPILER V5.60.0,  page_snake                                                         22/09/22  11:45:03  PAGE 5   

  245   4              og_canvas_drawDot(canvas1, delicious_x,delicious_y-1);
*** WARNING C188 IN LINE 245 OF User\PageManage\page_snake.c: 'parameter 3': value truncated
  246   4              og_canvas_drawDot(canvas1, delicious_x+1,delicious_y-1);
*** WARNING C188 IN LINE 246 OF User\PageManage\page_snake.c: 'parameter 2': value truncated
*** WARNING C188 IN LINE 246 OF User\PageManage\page_snake.c: 'parameter 3': value truncated
  247   4              og_canvas_drawDot(canvas1, delicious_x-1,delicious_y-1);
*** WARNING C188 IN LINE 247 OF User\PageManage\page_snake.c: 'parameter 2': value truncated
*** WARNING C188 IN LINE 247 OF User\PageManage\page_snake.c: 'parameter 3': value truncated
  248   4              if(snake_len < 30)
  249   4                snake_speed = 10;
  250   4              else if(snake_len < 40)
  251   4                snake_speed = 20;
  252   4              else if(snake_len < 60)
  253   4                snake_speed = 30;
  254   4              else if(snake_len < 90)
  255   4                snake_speed = 35;
  256   4              else if(snake_len < 130)
  257   4                snake_speed = 40;
  258   4              else
  259   4                snake_speed = 45;
  260   4            }
  261   3            if(game_over)
  262   3            {
  263   4              
  264   4            }
  265   3          }
  266   2        }
  267   1      }
  268          /**
  269            * @brief  页面事件
  270            * @param  btn:发出事件的按键
  271            * @param  event:事件编号
  272            * @retval 无
  273            */
  274          static void Event(unsigned char event)
  275          {
  276   1        if(event == KEY1_PRESSED)
  277   1          pageShift(page_menu, PAGE_RETURN);
  278   1        else if(event == KEY2_PRESSED)
  279   1        {
  280   2          
  281   2        }
  282   1        else if(event == KEY3_PRESSED)
  283   1        {
  284   2          if(game_over != 1)
  285   2          {
  286   3            if(game_pause)
  287   3              game_pause = 0;
  288   3            else
  289   3              game_pause = 1;
  290   3          }
  291   2        }
  292   1        else if(event == KEY4_PRESSED)
  293   1        {
  294   2          //og_anim_create(text2, 48, 0, ANIM_TIME_NORM, NULL);
  295   2        }
  296   1      }
  297          void pageRegister_page_snake(unsigned char pageID)
  298          {
  299   1        pageRegister(pageID, "SNAKE", Icon, Setup, Loop, Exit, Event);
  300   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       296     ------
  ecode size           =      1830     ------
C251 COMPILER V5.60.0,  page_snake                                                         22/09/22  11:45:03  PAGE 6   

  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =       518     ------
  xdata-const size     =    ------     ------
  edata size           =        33     ------
  bit size             =         3     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        94     ------
End of Module Information.


C251 COMPILATION COMPLETE.  14 WARNING(S),  0 ERROR(S)
