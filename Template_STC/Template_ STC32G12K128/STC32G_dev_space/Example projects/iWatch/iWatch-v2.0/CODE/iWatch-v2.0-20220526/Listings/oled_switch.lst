C251 COMPILER V5.60.0,  oled_switch                                                        22/09/22  11:45:00  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE oled_switch
OBJECT MODULE PLACED IN .\Objects\oled_switch.obj
COMPILER INVOKED BY: D:\Application\Keil_C251\C251\BIN\C251.EXE User\oled_gui\oled_widget\oled_switch.c XSMALL ROM(HUGE)
                    - OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\User\oled_gui;.\User\oled_gui\oled_core;.\User\oled_gui\oled_widget;.\User\Pag
                    -eManage;.\User\Sensor;.\User\System;.\User\Bluetooth) DEBUG PRINT(.\Listings\oled_switch.lst) TABS(2) OBJECT(.\Objects\o
                    -led_switch.obj) 

stmt  level    source

    1          #define _OLED_SWITCH_C
    2          #include "oled_switch.h"
    3          
    4          t_psWidget og_switch_create(uint8_t ucSize, uint8_t ucStatus, int16_t x, int16_t y)
    5          {
    6   1        t_psWidget pWidget = og_widget_create();
    7   1        #ifdef OLED_DEBUG
                 if(pWidget == NULL)
                 {
                   OG_PRINTERROR("switch widget create fail");
                   return NULL;
                 }
                 #endif
   14   1        if(ucStatus)
   15   1        {
   16   2          ucStatus = 1;
   17   2          pWidget->config |= 0x80;
   18   2        }
   19   1        else
   20   1        {
   21   2          pWidget->config &= ~0x80;
   22   2        }
   23   1        if(ucSize == 8)
   24   1        {
   25   2          pWidget->config &= ~0x40;
   26   2          pWidget->pFeature = (void *)bmp_switch8[ucStatus];
   27   2          pWidget->w = 12;
   28   2          pWidget->h = 8;
   29   2        }
   30   1        else if(ucSize == 16)
   31   1        {
   32   2          pWidget->config |= 0x40;
   33   2          pWidget->pFeature = (void *)bmp_switch16[ucStatus];
   34   2          pWidget->w = 24;
   35   2          pWidget->h = 16;
   36   2        }
   37   1        pWidget->x = x;
   38   1        pWidget->y = y;
   39   1        pWidget->config |= SWITCH_WIDGET;
   40   1        og_widget_add(pWidget);
   41   1        return pWidget;
   42   1      }
   43          void og_switch_setStatus(t_psWidget pWidget, uint8_t ucStatus)
   44          {
   45   1        #ifdef OLED_DEBUG
                 if(pWidget == NULL)
                 {
                   OG_PRINTERROR("try to set a null widget");
                   return;
                 }
                 if((pWidget->config & 0x0f) != SWITCH_WIDGET)
                 {
                   OG_PRINTERROR("wrong type of widget for this method");
                   return;
                 }
                 #endif
C251 COMPILER V5.60.0,  oled_switch                                                        22/09/22  11:45:00  PAGE 2   

   57   1        if(ucStatus)
   58   1        {
   59   2          ucStatus = 1;
   60   2          pWidget->config |= 0x80;
   61   2        }
   62   1        else
   63   1        {
   64   2          pWidget->config &= ~0x80;
   65   2        }
   66   1        if((pWidget->config | 0x40) == 0)
   67   1          pWidget->pFeature = (void *)bmp_switch8[ucStatus];
   68   1        else
   69   1          pWidget->pFeature = (void *)bmp_switch16[ucStatus];
   70   1      }
   71          uint8_t og_switch_getStatus(t_psWidget pWidget)
   72          {
   73   1        if(pWidget->config & 0x80)
   74   1          return 1;
   75   1        else 
   76   1          return 0;
   77   1      }
   78          void og_switch_draw(t_psWidget pWidget)
   79          {
   80   1        #ifdef OLED_DEBUG
                 if(pWidget == NULL)
                 {
                   OG_PRINTERROR("try to set a null widget");
                   return;
                 }
                 if((pWidget->config & 0x0f) != SWITCH_WIDGET)
                 {
                   OG_PRINTERROR("wrong type of widget for this method");
                   return;
                 }
                 #endif
   92   1        BMPtoBuf(pWidget->x, pWidget->y, pWidget->w, pWidget->h, pWidget->config & WIDGET_FOCUS, (uint8_t *)pWid
             -get->pFeature);
   93   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       120     ------
  ecode size           =       372     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------          6
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
